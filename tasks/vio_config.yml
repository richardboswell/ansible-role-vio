#
#  Copyright 2015 VMware, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
---
- name: Validate IP Address for Openstack Configuration
  debug: msg="IP Address --> {{ item }} is valid --> {{ item | ipaddr }}"
  failed_when: not item | ipaddr
  with_items: "{{ vio_ip_addrs }}"

- name: Validate AD users for Openstack Deployment when AD as authentication source
  vio_ldap:
    domain_controller: "{{ vio_authentication_ad_dc_hostname }}"
    encryption: "{{ vio_authentication_ad_encryption }}"
    admin_user: "{{ vio_authentication_ad_admin_user }}"
    admin_user_password: "{{ vio_authentication_ad_admin_user_password }}"
    bind_user: "{{ vio_authentication_ad_bind_user }}"
    bind_user_password: "{{ vio_authentication_ad_bind_user_password }}"
    project_user: "{{ vio_val_user_name_ad }}"
    project_user_password: "{{ vio_val_user_pass_ad }}"
    user_dn_tree: "{{ vio_authentication_ad_ldap_user_tree_dn }}"
    user_filter: "{{ vio_authentication_ad_ldap_user_filter }}"
    group_dn_tree: "{{ vio_authentication_ad_ldap_group_tree_dn }}"
    group_filter: "{{ vio_authentication_ad_ldap_group_filter }}"
  when: vio_use_ad == '1' and vio_use_keystone == '0'

- name: Get Vcenter VDS Moid
  vcenter_query:
    host: "{{ vio_oms_vcenter_hostname }}"
    login: "{{ vio_oms_vcenter_username }}"
    password: "{{ vio_oms_vcenter_pwd }}"
    port: 443
    vcenter_object_name: "{{ vio_nsx_vds }}"
    ansible_variable_name: "vds_moid"
    vcenter_vim_type: "vds"

- name: Get Compute Cluster Moid
  vcenter_query:
    host: "{{ vio_oms_vcenter_hostname }}"
    login: "{{ vio_oms_vcenter_username }}"
    password: "{{ vio_oms_vcenter_pwd }}"
    port: 443
    vcenter_object_name: "{{ vio_nova_cluster }}"
    ansible_variable_name: "compute_cluster_moid"
    vcenter_vim_type: "cluster"

- name: Get Edge Cluster Moid
  vcenter_query:
    host: "{{ vio_oms_vcenter_hostname }}"
    login: "{{ vio_oms_vcenter_username }}"
    password: "{{ vio_oms_vcenter_pwd }}"
    port: 443
    vcenter_object_name: "{{ vio_nsx_edge_cluster }}"
    ansible_variable_name: "edge_cluster_moid"
    vcenter_vim_type: "cluster"

- name: Get Management Cluster Moid
  vcenter_query:
    host: "{{ vio_oms_vcenter_hostname }}"
    login: "{{ vio_oms_vcenter_username }}"
    password: "{{ vio_oms_vcenter_pwd }}"
    port: 443
    vcenter_object_name: "{{ vio_management_cluster }}"
    ansible_variable_name: "management_cluster_moid"
    vcenter_vim_type: "cluster"

- name: Get Transport Zone Id
  nsx_vds_id:
    nsx_manager: "{{ vio_nsx_manager_ip }}"
    nsx_manager_username: "{{ vio_nsx_manager_username }}"
    nsx_manager_password: "{{ vio_nsx_manager_password }}"
    nsx_api_version: "2.0"
    vdnscope_name: "{{ vio_nsx_transport_zone }}"
    ansible_variable_name: "vdnscope_id"

- name: Create Openstack VIO-Config configuration file
  template: src=../templates/vio_cluster_config.json.j2 dest="{{ vio_cluster_spec }}"
  with_items:
    - { vdsmoid: "{{ vds_moid }}", vdnscopeid: "{{ vdnscope_id }}", edgeid: "{{ edge_cluster_moid }}", computeid: "{{ compute_cluster_moid }}", managementid: "{{ management_cluster_moid }}" }

- name: Confirm VIO Cluster Spec file is present
  stat: path="{{ vio_cluster_spec }}"
  register: cluster_spec_file

- name: Kick off VIO Deployment
  vio_deploy:
    oms_server: "{{ vio_oms_ip_address }}"
    login: "{{ vio_oms_vcenter_username }}"
    password: "{{ vio_oms_vcenter_pwd }}"
    cluster_spec_json: "{{ vio_cluster_spec }}"
    vio_deployment_name: "{{ vio_cluster_name }}"
    state: 'present'
  failed_when: not cluster_spec_file.stat.exists
