#
#  Copyright 2015 VMware, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
---
- name: Set Authentication for Keystone
  set_fact:
    authuser: "{{ vio_authentication_keystone_username }}"
    authpass: "{{ vio_authentication_keystone_password }}"
  when: vio_use_ad == '0' and vio_use_keystone == '1'

- name: Set Authentication for AD
  set_fact:
    authuser: "{{ vio_authentication_ad_admin_user }}"
    authpass: "{{ vio_authentication_ad_admin_user_password }}"
  when: vio_use_ad == '1' and vio_use_keystone == '0'

- name: Verify admin user can Authenticate to Openstack
  os_auth:
    auth:
      auth_url: 'https://{{ vio_loadbalancer_vip }}:5000/v2.0'
      username: "{{ authuser }}"
      password: "{{ authpass }}"
      project_name: 'admin'
    validate_certs: False
  register: adminauth

- name: Get External Network Portgroup MOID
  vcenter_query:
    host: "{{ vio_oms_vcenter_hostname }}"
    login: "{{ vio_oms_vcenter_username }}"
    password: "{{ vio_oms_vcenter_pwd }}"
    port: 443
    vcenter_object_name: "{{ vio_val_extnet_portgroup }}"
    ansible_variable_name: "external_net_portgroup_moid"
    vcenter_vim_type: "dvs-port"

- name: Create Openstack External Provider Network and subnet
  vio_create_network:
    auth_url: "https://{{ vio_loadbalancer_vip }}:5000/v2.0"
    username: "{{ authuser }}"
    password: "{{ authpass }}"
    tenant_name: 'admin'
    state: 'present'
    network:
      name: "{{ vio_val_ext_net_name }}"
      admin_state_up: True
      port_security_enabled: True
      provider_network_type: "portgroup"
      provider_physical_network: "{{ external_net_portgroup_moid }}"
      router_external: True
      shared: True
    subnet:
      name: "{{ vio_val_ext_net_name }}_subnet"
      enable_dhcp: False
      gateway_ip: "{{ vio_val_ext_net_gateway }}"
      ip_version: 4
      cidr: "{{ vio_val_ext_net_cidr }}"
      allocation_pools:
        - start: "{{ vio_val_ext_net_pool_start }}"
          end: "{{ vio_val_ext_net_pool_end }}"

- name: Create Demo Project
  os_project:
    auth:
      auth_url: 'https://{{ vio_loadbalancer_vip }}:5000/v2.0'
      username: "{{ authuser }}"
      password: "{{ authpass }}"
      project_name: 'admin'
    validate_certs: False
    name: "{{ vio_val_project_name }}"
    description: "{{ vio_val_project_name }} Validation Project for VIO"
    state: 'present'
  register: os_new_project

- name: debug create demo project
  debug: msg="New Project ID--> {{ os_new_project.project.id }}"

- name: Create Demo Project User
  os_user:
    auth:
      auth_url: 'https://{{ vio_loadbalancer_vip }}:5000/v2.0'
      username: "{{ authuser }}"
      password: "{{ authpass }}"
      project_name: 'admin'
    validate_certs: False
    name: "{{ vio_val_user_name }}"
    password: "{{ vio_val_user_pass }}"
    default_project: "{{ vio_val_project_name }}"
    enabled: True
  when: vio_use_ad == '0' and vio_use_keystone == '1'
  register: os_user_test

- name: Add existing AD user to project
  vio_add_ad_user:
    auth_url: 'https://{{ vio_loadbalancer_vip }}:5000/v2.0'
    username: "{{ authuser }}"
    password: "{{ authpass }}"
    tenant_name: 'admin'
    user_to_add: "{{ vio_val_user_name_ad }}"
    tenant_add_to: "{{ vio_val_project_name }}"
    state: 'present'
  when: vio_use_ad == '1' and vio_use_keystone == '0'

- name: Set Project user Keystone
  set_fact:
    projectuser: "{{ vio_val_user_name }}"
    projectpass: "{{ vio_val_user_pass }}"
  when: vio_use_ad == '0' and vio_use_keystone == '1'

- name: Set Project user AD
  set_fact:
    projectuser: "{{ vio_val_user_name_ad }}"
    projectpass: "{{ vio_val_user_pass_ad }}"
  when: vio_use_ad == '1' and vio_use_keystone == '0'

- name: Get External Network ID
  os_networks_facts:
    auth:
      auth_url: 'https://{{ vio_loadbalancer_vip }}:5000/v2.0'
      username: "{{ authuser }}"
      password: "{{ authpass }}"
      project_name: 'admin'
    validate_certs: False
    name: "{{ vio_val_ext_net_name }}"

- name: Get Image ID
  os_image_facts:
    auth:
      auth_url: 'https://{{ vio_loadbalancer_vip }}:5000/v2.0'
      username: "{{ authuser }}"
      password: "{{ authpass }}"
      project_name: 'admin'
    validate_certs: False
    image: "{{ default_image_name | default('ubuntu-14.04-server-amd64') }}"

- name: Create Heat Template
  template:
    src: "{{ vio_heat_template_src }}"
    dest: "{{ vio_heat_template_dest }}"
  with_items:
    - { dns_name_server: "{{ dns_server }}", image_id: "{{ openstack_image.id }}", external_network_id: "{{ openstack_networks[0]['id'] }}" }
  register: heat_template_test

- name: Verify Heat Template Created
  stat: path="{{ vio_heat_template_dest }}"
  register: heat

- name: Get Authentication Token for new project new user
  os_auth:
    auth:
      auth_url: "https://{{ vio_loadbalancer_vip }}:5000/v2.0"
      username: "{{ projectuser }}"
      password: "{{ projectpass }}"
      project_name: "{{ vio_val_project_name }}"
    validate_certs: False
  register: tenantauth

- name: Deploy Heat Stack Template
  uri:
    url: "https://{{ vio_loadbalancer_vip }}:8004/v1/{{ os_new_project.project.id }}/stacks"
    method: POST
    HEADER_Content-Type: "application/json"
    HEADER_X-Auth-Token: "{{ auth_token }}"
    body: "{{ lookup('file', '/tmp/vio_heat.json') }}"
    body_format: json
    validate_certs: no
    return_content: yes
    status_code: 201
  when: heat.stat.exists
  register: heat_stack_call

